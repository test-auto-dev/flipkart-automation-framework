trigger:
  branches:
    include:
      - main
      - develop
      - feature-*
      - fix-*
      - feat-*

parameters:
  - name: browser
    displayName: 'Browser Selection'
    type: string
    default: 'chrome'
    values:
      - chrome
      - firefox
      - edge

  - name: environment
    displayName: 'Target Environment'
    type: string
    default: 'qa'
    values:
      - qa
      - staging
      - prod

  - name: suite
    displayName: 'Test Suite'
    type: string
    default: 'testng.xml'
    values:
      - testng.xml
      - smoke-suite.xml
      - regression-suite.xml

  - name: headless
    displayName: 'Headless Mode'
    type: boolean
    default: true

  - name: parallelThreads
    displayName: 'Number of Parallel Threads'
    type: number
    default: 3
    values:
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      - 8

  - name: includeGroups
    displayName: 'Include Test Groups (comma-separated, leave empty for all)'
    type: string
    default: ''

  - name: excludeGroups
    displayName: 'Exclude Test Groups (comma-separated)'
    type: string
    default: ''

  - name: specificTestClass
    displayName: 'Run Specific Test Class (Optional, leave empty for all)'
    type: string
    default: ''

  - name: excludeTestClass
    displayName: 'Exclude Specific Test Classes (comma-separated, Optional)'
    type: string
    default: ''

  - name: retryCount
    displayName: 'Retry Failed Tests'
    type: number
    default: 0
    values:
      - 0
      - 1
      - 2
      - 3

  - name: enableReporting
    displayName: 'Generate & Publish Reports'
    type: boolean
    default: true

  - name: enableLogging
    displayName: 'Enable Verbose Logging'
    type: boolean
    default: false

pool:
  vmImage: 'ubuntu-latest'

variables:
  mavenPomFile: 'pom.xml'
  buildDirectory: '$(Build.ArtifactStagingDirectory)'
  reportDirectory: 'test-output/extent-reports'
  screenshotDirectory: 'test-output/screenshots'

stages:
  - stage: PreValidation
    displayName: 'Pre-Validation & Setup'
    jobs:
      - job: ValidateParameters
        displayName: 'Validate Input Parameters'
        steps:
          - task: PowerShell@2
            displayName: 'Validate Parallel Threads'
            inputs:
              targetType: 'inline'
              script: |
                $threads = ${{ parameters.parallelThreads }}
                $maxThreads = [System.Environment]::ProcessorCount + 1

                Write-Host "===================================="
                Write-Host "Configuration Summary:"
                Write-Host "===================================="
                Write-Host "Browser: ${{ parameters.browser }}"
                Write-Host "Environment: ${{ parameters.environment }}"
                Write-Host "Test Suite: ${{ parameters.suite }}"
                Write-Host "Headless Mode: ${{ parameters.headless }}"
                Write-Host "Parallel Threads: $threads"
                Write-Host "Max Recommended Threads: $maxThreads"
                Write-Host "Include Groups: ${{ parameters.includeGroups }}"
                Write-Host "Exclude Groups: ${{ parameters.excludeGroups }}"
                Write-Host "Specific Test Class: ${{ parameters.specificTestClass }}"
                Write-Host "Exclude Test Classes: ${{ parameters.excludeTestClass }}"
                Write-Host "Retry Count: ${{ parameters.retryCount }}"
                Write-Host "Verbose Logging: ${{ parameters.enableLogging }}"
                Write-Host "===================================="

                if ($threads -gt $maxThreads) {
                    Write-Host "##vso[task.logissue type=warning]Thread count ($threads) exceeds recommended maximum ($maxThreads)"
                }

  - stage: Build
    displayName: 'Build Stage'
    dependsOn: PreValidation
    condition: succeeded()
    jobs:
      - job: BuildApplication
        displayName: 'Build Application'
        steps:
          # Optional: Setup Maven settings.xml (for private repos)
          - task: Bash@3
            displayName: 'Setup Maven Settings'
            condition: always()
            inputs:
              targetType: 'inline'
              script: |
                echo "Creating Maven settings.xml..."
                mkdir -p ~/.m2
                cat > ~/.m2/settings.xml <<EOF
                <settings>
                  <mirrors>
                    <mirror>
                      <id>central</id>
                      <name>Maven Central</name>
                      <url>https://repo.maven.apache.org/maven2</url>
                      <mirrorOf>central</mirrorOf>
                    </mirror>
                  </mirrors>
                </settings>
                EOF

          - task: Maven@3
            displayName: 'Maven Clean Compile'
            inputs:
              mavenPomFile: '$(mavenPomFile)'
              goals: 'clean compile'
              options: '-DskipTests -X'
              javaHomeOption: 'JDKVersion'
              jdkVersionOption: '11'
              mavenVersionOption: 'Default'
              mavenAuthenticateFeed: false
              effectivePomSkip: false

  - stage: Test
    displayName: 'Test Execution Stage'
    dependsOn: Build
    condition: succeeded()
    jobs:
      - job: ExecuteTests
        displayName: 'Execute Automation Tests'
        timeoutInMinutes: 90
        steps:
          - task: Maven@3
            displayName: 'Resolve Maven Dependencies'
            inputs:
              mavenPomFile: '$(mavenPomFile)'
              goals: 'dependency:resolve'
              javaHomeOption: 'JDKVersion'
              jdkVersionOption: '11'

          - task: PowerShell@2
            displayName: 'Build Maven Test Command'
            inputs:
              targetType: 'inline'
              script: |
                $mavenCmd = "mvn clean test"
                $mavenCmd += " -Dbrowser=${{ parameters.browser }}"
                $mavenCmd += " -Denvironment=${{ parameters.environment }}"
                $mavenCmd += " -Dheadless=${{ parameters.headless }}"
                $mavenCmd += " -DthreadCount=${{ parameters.parallelThreads }}"
                $mavenCmd += " -DsuiteXmlFile=src/test/resources/testng/${{ parameters.suite }}"

                if (${{ parameters.retryCount }} -gt 0) {
                    $mavenCmd += " -Dsurefire.rerunFailingTestsCount=${{ parameters.retryCount }}"
                }

                if ('${{ parameters.includeGroups }}' -ne '') {
                    $mavenCmd += " -Dgroups.include=${{ parameters.includeGroups }}"
                }

                if ('${{ parameters.excludeGroups }}' -ne '') {
                    $mavenCmd += " -Dgroups.exclude=${{ parameters.excludeGroups }}"
                }

                if ('${{ parameters.specificTestClass }}' -ne '') {
                    $mavenCmd += " -Dtest=${{ parameters.specificTestClass }}"
                }

                if ('${{ parameters.excludeTestClass }}' -ne '') {
                    $mavenCmd += " -DexcludeTestClasses=${{ parameters.excludeTestClass }}"
                }

                if ('${{ parameters.enableLogging }}' -eq 'true') {
                    $mavenCmd += " -X"
                }

                Write-Host "##[section]Final Maven Command:"
                Write-Host $mavenCmd
                Write-Host "##vso[task.setvariable variable=MAVEN_CMD]$mavenCmd"

          - script: |
              echo "========================================="
              echo "Starting Test Execution"
              echo "========================================="
              echo "$(MAVEN_CMD)"
              echo "========================================="
              $(MAVEN_CMD)
            displayName: 'Run Maven Tests'
            continueOnError: true

  - stage: ReportAndPublish
    displayName: 'Reporting & Publishing'
    dependsOn: Test
    condition: always()
    jobs:
      - job: GenerateReports
        displayName: 'Generate Test Reports'
        condition: eq('${{ parameters.enableReporting }}', 'true')
        steps:
          - task: PublishTestResults@2
            displayName: 'Publish TestNG Results'
            condition: always()
            inputs:
              testResultsFormat: 'JUnit'
              testResultsFiles: '**/surefire-reports/TEST-*.xml'
              failTaskOnFailedTests: false
              searchFolder: '$(System.DefaultWorkingDirectory)'
              testRunTitle: 'Automation Tests - ${{ parameters.browser }}'
              mergeTestResults: true

          - task: PublishBuildArtifacts@1
            displayName: 'Publish Reports & Screenshots'
            condition: always()
            inputs:
              PathtoPublish: 'test-output'
              ArtifactName: 'reports'
              publishLocation: 'Container'

  - stage: Notification
    displayName: 'Notifications'
    dependsOn: ReportAndPublish
    condition: always()
    jobs:
      - job: SendNotifications
        displayName: 'Send Test Notifications'
        steps:
          - task: PowerShell@2
            displayName: 'Generate Notification'
            inputs:
              targetType: 'inline'
              script: |
                $buildStatus = "$(Build.Result)"
                $buildUrl = "$(System.CollectionUri)$(System.TeamProject)/_build/results?buildId=$(Build.BuildId)"

                Write-Host "========================================="
                Write-Host "Build Status: $buildStatus"
                Write-Host "Build URL: $buildUrl"
                Write-Host "========================================="
                Write-Host "##[warning]Email notification can be added using pipeline notifications or service hook integrations."
